package:
  name: turbo_turtle
  # TODO: Figure out how to use pyproject.toml and a Conda build Jinja template
  version: {{ VERSION }}

about:
  home: https://re-git.lanl.gov/aea/python-projects/turbo_turtle
  summary: 'Partition hollow, spherical bodies using a turtle shell'
  description: |
    Partition hollow, spherical bodies using a turtle shell
  doc_url: https://aea.re-pages.lanl.gov/python-projects/turbo_turtle/main/index.html
  dev_url: https://re-git.lanl.gov/aea/python-projects/turbo_turtle

source:
  path: '..'

build:
  noarch: python
  number: 0
  script_env:
    - SETUPTOOLS_SCM_PRETEND_VERSION={{ VERSION }}
  script:
    # Build and install Conda package
    - $PYTHON -m build --no-isolation
    - $PYTHON -m pip install dist/$PKG_NAME-$PKG_VERSION.tar.gz --no-deps --ignore-installed -v --no-build-isolation
    - $PYTHON -m pip show $PKG_NAME
    # Build man page and HTML documentation to bundle in Conda package
    - scons man html
    - $PYTHON package_documentation.py
  ignore_run_exports:
    - python_abi

requirements:
  build:
    - scons >=4
    - setuptools_scm[toml] >=6.2,<8
    - sphinx >=5.1
    - sphinx-argparse
    - sphinx-copybutton >=0.5.1
    - sphinx_rtd_theme >=1
    - waves >=0.7.2
  host:
    - python
    - python-build
    - pip
    - setuptools >=62
    - setuptools_scm[toml] >=6.2,<8
  run:
    - python >=3.8

test:
  requires:
    - numpy
    - pytest
    - pytest-xdist
  imports:
    - turbo_turtle
  source_files:
    - legacy_geometry.py
    - turbo_turtle/tests/washer.csv
    - turbo_turtle/tests/vase.csv
  commands:
    - test_root=${PWD}
    # Test as-installed project unit tests
    - cd $SP_DIR/$PKG_NAME
    # TODO: Decide if we should package or drop the legacy geometry tests
    - cp ${test_root}/legacy_geometry.py .
    - pytest -vvv --ignore=_abaqus_python
    - abq2023 python -m unittest discover _abaqus_python --verbose
    - cd ${test_root}
    # System tests
    - turbo-turtle sphere --inner-radius 1 --outer-radius 2 --output-file sphere.cae --model-name sphere --part-name sphere --quadrant both --revolution-angle 360.0 --center 0.0 0.0
    - turbo-turtle partition --input-file sphere.cae --output-file sphere.cae --model-name sphere --part-name sphere --center 0.0 0.0 0 --xpoint 1.0 0.0 0.0 --zpoint 0.0 0.0 1.0 --plane-angle 45
    - turbo-turtle mesh --input-file sphere.cae --output-file sphere.cae --model-name sphere --part-name sphere --global-seed 0.15 --element-type C3D8
    - turbo-turtle image --input-file sphere.cae --output-file sphere.png --model-name sphere --part-name sphere
    - grep C3D8R sphere.inp
    - turbo-turtle geometry --input-file turbo_turtle/tests/washer.csv --model-name washer --part-name washer --output-file washer.cae --revolution-angle 360.0
    - turbo-turtle geometry --input-file turbo_turtle/tests/vase.csv --model-name vase --part-name vase --output-file vase.cae --revolution-angle 360.0
    - turbo-turtle geometry --input-file turbo_turtle/tests/vase.csv --model-name vase-axisymmetric --part-name vase-axisymmetric --output-file vase-axisymmetric.cae --revolution-angle 0.0
    - turbo-turtle geometry --input-file turbo_turtle/tests/washer.csv turbo_turtle/tests/vase.csv --model-name multi-part-geometry --output-file multi-part-geometry.cae --revolution-angle 360.0
    - turbo-turtle cylinder --inner-radius 1 --outer-radius 2 --height 1 --model-name cylinder_3d --part-name cylinder_3d --output-file cylinder_3d.cae --revolution-angle 360.0
    - turbo-turtle cylinder --inner-radius 1 --outer-radius 2 --height 1 --model-name cylinder_2d --part-name cylinder_2d --output-file cylinder_2d.cae --revolution-angle 0.0
    # Separately handled _merge.py tests
    - turbo-turtle merge --input-file multi-part-geometry.cae sphere.cae --output-file merged-model.cae --merged-model-name merged-model --model-name multi-part-geometry sphere --part-name washer vase sphere
    - grep -iIre "SUCCESS" abaqus.rpy | grep "part 'washer'"
    - grep -iIre "SUCCESS" abaqus.rpy | grep "part 'vase'"
    - grep -iIre "SUCCESS" abaqus.rpy | grep "part 'sphere'"
