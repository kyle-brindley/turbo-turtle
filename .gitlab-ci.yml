workflow:
  rules:  # Do not create pipelines for tag updates
    - if: $CI_COMMIT_TAG
      when: never
    - when: always

stages:
  - environment
  - test
  - deploy

before_script:
  # Assumes CI executes on AEA compute servers
  - aea_compute_path="/projects/aea_compute"
  - aea_conda_channel="${aea_compute_path}/aea-conda"
  - aea_modulefiles="${aea_compute_path}/modulefiles"
  - module use ${aea_modulefiles}
  - module load texlive
  - module use ${PWD}/modulefiles
  # Prefer the CI environment and fall back to AEA environment(s)
  - project_environment='turbo-turtle-dev'
  - environment_choices="${project_environment} aea-beta aea-release"
  - for env in ${environment_choices}; do if [[ -d "${aea_compute_path}/${env}" ]]; then environment=${env}; break; fi; done
  - echo ${environment}
  - module load ${environment}
  - conda info
  # TODO: kick off 'environment' job for missing environments instead of re-creating the environment build logic here
  - environment_path="${aea_compute_path}/${project_environment}"
  - conda_options='--force'
  - |
      if [[ ! -d ${environment_path} ]]; then
          export ALL_PROXY="proxyout.lanl.gov:8080"
          export HTTP_PROXY="http://$ALL_PROXY"
          export HTTPS_PROXY=$HTTP_PROXY
          conda env create --prefix ${environment_path} --file environment.yml ${conda_options};
          chmod -R 755 ${environment_path}
          unset ALL_PROXY
          unset HTTP_PROXY
          unset HTTPS_PROXY
      fi
  - if [[ ${project_environment} != ${environment} ]]; then module unload ${environment}; module load ${project_environment}; fi
  - conda_artifacts_directory='conda-bld'

environment:
  stage: environment
  variables:
    GIT_STRATEGY: clone
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" || $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "dev"
      changes:
        - "modulefiles/*"
        - "environment.yml"
  script:
    # Set LANL proxies
    - export ALL_PROXY="proxyout.lanl.gov:8080"
    - export HTTP_PROXY="http://$ALL_PROXY"
    - export HTTPS_PROXY=$HTTP_PROXY
    # Re-build the Conda environment on changes to environment files
    - conda env create --prefix ${environment_path} --file environment.yml ${conda_options}
    # Remove write permissions from group to avoid accidental environment changes
    - chmod -R 755 ${environment_path}
    # place the common modulefiles in an accessible location
    - cp ${PWD}/modulefiles/* ${aea_modulefiles}
    # Link SCons man pages to the expected MANPATH location
    - ln ${environment_path}/scons.1 ${environment_path}/man/man1/scons.1
    - ln ${environment_path}/sconsign.1 ${environment_path}/man/man1/sconsign.1
    - ln ${environment_path}/scons-time.1 ${environment_path}/man/man1/scons-time.1
  tags:
    - shell-aea

test:
  stage: test
  variables:
    GIT_STRATEGY: clone
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    - scons regression
  tags:
    - shell-aea

conda-build:
  stage: test
  variables:
    GIT_STRATEGY: clone
  dependencies: []
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "dev"
  script:
    # Set the LANL internal proxies
    - export ALL_PROXY="proxyout.lanl.gov:8080"
    - export HTTP_PROXY="http://$ALL_PROXY"
    - export HTTPS_PROXY=$HTTP_PROXY
    # Override default permissions. Set group to rx with no write permissions.
    - umask 0022
    - mkdir ${conda_artifacts_directory}
    - croot="/scratch/$USER/$(basename $PWD)/${conda_artifacts_directory}"
    - VERSION=$(python -m setuptools_scm) conda mambabuild recipe-internal --channel conda-forge --no-anaconda-upload --croot ${croot} --output-folder ${conda_artifacts_directory}
    - conda build purge --croot ${croot}
  artifacts:
    expire_in: '2 hrs'
    paths:
      - conda-bld/noarch/turbo_turtle-*-*.tar.bz2
  tags:
    # sstelmo's version of git is too old for setuptools_scm
    - sstbigbird-shell-aea

deploy:
  stage: deploy
  variables:
    GIT_STRATEGY: clone
  dependencies:
    - conda-build
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "dev"
  script:
    # Override default permissions. Set group to rx with no write permissions.
    - umask 0022
    # Copy Conda package to AEA Conda Channel
    - cp ${conda_artifacts_directory}/noarch/turbo_turtle-*-*.tar.bz2 ${aea_conda_channel}/noarch
    # Change group for access by all W-13 staff and prevent accidental modification by institutional account in CI jobs
    - chgrp w13users ${aea_conda_channel}/noarch/turbo_turtle-*-*.tar.bz2 || true
    - chmod 555 ${aea_conda_channel}/noarch/turbo_turtle-*-*.tar.bz2 || true
    # Update the AEA Conda Channel index
    - conda index ${aea_conda_channel}
    # Troubleshooting conda channel deploy and index update
    - conda search --channel file://${aea_conda_channel}/ --override-channels turbo_turtle
  tags:
    - shell-aea

# It MUST be called pages
pages:
  stage: deploy
  variables:
    GIT_STRATEGY: clone
  dependencies: []
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    - rm -rf public && mkdir -p public
    # Ensure the ``_version.py`` file is created
    - python -m setuptools_scm
    - scons html --clean && scons html
    - cp -r build/docs/html/* public/
  artifacts:
    paths:
      # It MUST be called public
      - public
  tags:
    - shell-aea
