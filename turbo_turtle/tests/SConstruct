import os
import inspect
import pathlib

import waves

import turbo_turtle

AddOption(
    "--uninstalled",
    dest="uninstalled",
    default=False,
    action="store_true",
    help="Boolean to use the uninstalled, repository Turbo-Turtle command 'python -m turbo_turtle.main'. " \
         "(default: '%default')"
)

project_configuration = pathlib.Path(inspect.getfile(lambda: None))

env = Environment(
    ENV=os.environ.copy(),
    uninstalled=GetOption("uninstalled"),
)
env["abaqus"] = waves.scons_extensions.add_program(["/apps/abaqus/Commands/abq2023", "abq2023"], env)
env["turbo_turtle"] = "python -m turbo_turtle.main" if env["uninstalled"] else "turbo-turtle"
env.Append(BUILDERS={
    "TurboTurtleSphere":
        turbo_turtle.scons_extensions._turbo_turtle_sphere(program=env["turbo_turtle"],
                                                           abaqus_command=[env['abaqus']]),
    "TurboTurtlePartition":
        turbo_turtle.scons_extensions._turbo_turtle_partition(program=env["turbo_turtle"],
                                                              abaqus_command=[env['abaqus']]),
})

env.TurboTurtleSphere(
    target=["sphere.cae"],
    source=[str(project_configuration)],
    inner_radius=1.,
    outer_radius=2.,
    model_name="sphere",
    part_name="sphere"
)

env.TurboTurtlePartition(
    target=["partition.cae"],
    source=["sphere.cae"],
    model_name="sphere",
    part_name="sphere"
)
